openapi: 3.0.0
info:
  title: Task API
  version: '1.0.0'
  description: A simple API for managing tasks with CRUD operations.
servers:
  - url: http://localhost:3000
paths:
  /tasks:
    get:
      summary: Retrieve all tasks
      responses:
        '200':
          description: A list of tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '500':
          description: Failed to retrieve tasks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new task
      requestBody:
        description: Task object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTask'
      responses:
        '201':
          description: Task created successfully.
        '400':
          description: Title is required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tasks/{id}:
    get:
      summary: Retrieve a specific task by ID
      parameters:
        - name: id
          in: path
          description: ID of the task to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The requested task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Failed to retrieve task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update an existing task
      parameters:
        - name: id
          in: path
          description: ID of the task to update
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated task object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTask'
      responses:
        '200':
          description: Task updated successfully.
    delete:
      summary: Delete a task
      parameters:
        - name: id
          in: path
          description: ID of the task to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task deleted successfully.
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: 'Test Task'
        description:
          type: string
          example: 'Test Description'
      required:
        - id
        - title
    NewTask:
      type: object
      properties:
        title:
          type: string
          example: 'New Task'
        description:
          type: string
          example: 'Task description'
      required:
        - title
    UpdateTask:
      type: object
      properties:
        title:
          type: string
          example: 'Updated Task'
        description:
          type: string
          example: 'Updated Description'
      required:
        - title
    Error:
      type: object
      properties:
        message:
          type: string
          example: 'Error message describing what went wrong.'
